import type { Metadata } from 'next';
import { Inter } from 'next/font/google';
import './globals.css';
import 'bootstrap/dist/css/bootstrap.min.css';
import Footer from '@/components/Footer';
import NavBar from '@/components/Navbar';
import { getServerSession } from 'next-auth';
import { PrismaClient } from '@prisma/client';
import authOptions from '@/lib/authOptions';
import Providers from './providers';

const inter = Inter({ subsets: ['latin'] });

export const metadata: Metadata = {
  title: 'SpotMeBro',
  description: 'Generated by ics-software-engineering.github.io',
};

const prisma = new PrismaClient(); // Start a new prisma session

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const session = await getServerSession(authOptions);
  const currentUser = session?.user?.email; // Get current users email bassed on the session data

  let profile = null;
  if (currentUser) {
    profile = await prisma.profile.findUnique({
      where: { email: currentUser },
    });
  } // Find the matching profile associated with the current user, as of right now this is done by matching emails

  const classString = `${inter.className} wrapper`;
  return (
    <html lang="en">
      <body className={classString}>
        <Providers>
          <NavBar profile={profile} />
          {children}
          <Footer />
        </Providers>
      </body>
    </html>
  );
}
